import b from"./oli.portfolio-v1.1.410.js";import{k as f,_ as v,b as r,c as t,i as k,w as j,u as m,d as e,F as s,l as p,g as w,t as _,q as x}from"./oli.portfolio-v1.1.4.js";import{c as y,u as I}from"./oli.portfolio-v1.1.45.js";import{v as i,g as c,m as S}from"./oli.portfolio-v1.1.43.js";var A="/icons/internet.webp",$="/images/projectsImages/calendarApp.webp",N="/images/projectsImages/guessNumber.webp",P="/images/projectsImages/lightHouseReport.webp",R="/images/projectsImages/quizApp.webp",T="/images/projectsImages/recognition.webp",z="/images/projectsImages/translog_company.webp",g;const a=(g=y)==null?void 0:g.colors[0],C=f({id:"projects",state:()=>({projects:[{id:i(),imgUrl:P,name:"Use Python to automate Google Lighthouse Reports",tags:[{name:"#pyhton",color:`background-color: ${a.colorRed};`},{name:"#lighthouse",color:`background-color: ${a.colorOrangePrimary};`},{name:"#seo",color:`background-color: ${a.colorDarkBlue};`}],description:"Generate Google Lighthouse Reports for your website with multiple runs and keep historical track of it.",socialLinks:[{link:"https://github.com/oliseulean/Google-Lighthouse-Automation-Script",icon:c},{link:"https://medium.com/@olimpiuseulean/use-python-to-automate-google-lighthouse-reports-and-keep-a-historical-record-of-these-65f378325d64",icon:S}]},{id:i(),imgUrl:T,name:"Detection and Recognition Traffic Signs using Deep Learning",tags:[{name:"#python",color:`background-color: ${a.colorRed};`},{name:"#keras",color:`background-color: ${a.colorWhiteGray};`},{name:"#cnn",color:`background-color: ${a.colorBluePrimary};`}],description:"In this project, I used Anaconda, Python, and TensorFlow to classify and recognize traffic signs.",socialLinks:[{link:"https://github.com/oliseulean/traffic-signs-recognition/",icon:c}]},{id:i(),imgUrl:z,name:"TRANSLOG T&C - company website",tags:[{name:"#wordpress",color:`background-color: ${a.colorDarkBlue};`},{name:"#seo",color:`background-color: ${a.colorBluePrimary};`}],description:"A personal presentation website for Translog T&C company.",socialLinks:[{link:"https://translogtc.ro/",icon:A}]},{id:i(),imgUrl:$,name:"Calendar-App-Vue",tags:[{name:"#vue",color:`background-color: ${a.colorVue};`},{name:"#node",color:`background-color: ${a.colorDarkGreen};`},{name:"#vuex",color:`background-color: ${a.colorBluePrimary};`}],description:"A Calendar App in VueJS with Vuex & NodeJS.",socialLinks:[{link:"https://github.com/oliseulean/Calendar-App-Vue-Node/",icon:c}]},{id:i(),imgUrl:N,name:"Guess the number based on voice recognition",tags:[{name:"#js",color:`background-color: ${a.colorOrangePrimary};`},{name:"#parcel",color:`background-color: ${a.colorDarkBlue};`}],description:"A basic VanillaJs application which is using an API for guessing a number between 1 - 100 based on voice recognition.",socialLinks:[{link:"https://github.com/oliseulean/guess-the-number-based-on-voice-recognition",icon:c}]},{id:i(),imgUrl:R,name:"Dog Quiz App",tags:[{name:"#vue",color:`background-color: ${a.colorVue};`},{name:"#js",color:`background-color: ${a.colorOrangePrimary};`},{name:"#css",color:`background-color: ${a.colorRed};`}],description:"I created a Dog Quiz App. There are 10 questions with only one correct answer. I fetch a breed API call to generate random pictures foreach dog breed.",socialLinks:[{link:"https://github.com/oliseulean/dog-quiz-app/",icon:c}]}]}),getters:{},actions:{}});const D={class:"app__projects"},L=w(" FEATURED PROJECTS "),G={class:"app__projects__container"},V={class:"app__projects__container__card-image"},B=["src"],U={class:"app__projects__container__card-heading"},J={class:"app__projects__container__card__tag"},H={class:"app__projects__container__card-description"},O={class:"app__projects__container__card-github"},q=["href"],E=["src","alt"],F={__name:"Projects",setup(Q){const u=C(),h=I();return(K,M)=>{var d,l;return r(),t("div",D,[k(b,{color:(l=(d=m(h))==null?void 0:d.colors)==null?void 0:l.colorDark,class:"app__projects__title"},{default:j(()=>[L]),_:1},8,["color"]),e("div",G,[(r(!0),t(s,null,p(m(u).projects,n=>(r(),t("div",{class:"app__projects__container__card",key:n.id},[e("div",V,[e("picture",null,[e("img",{src:n.imgUrl,alt:"Project Image",width:"30",height:"30",loading:"lazy"},null,8,B)])]),e("div",U,_(n.name),1),e("div",J,[(r(!0),t(s,null,p(n.tags,o=>(r(),t("button",{class:"app__projects__container__card__tag-btn",key:o.id,style:x(o.color)},_(o.name),5))),128))]),e("div",H,_(n.description),1),e("div",O,[(r(!0),t(s,null,p(n.socialLinks,o=>(r(),t("a",{key:o.link,href:o.link,target:"_blank"},[e("img",{src:o.icon,width:"30",height:"30",alt:o.icon,loading:"lazy"},null,8,E)],8,q))),128))])]))),128))])])}}};var aa=v(F,[["__scopeId","data-v-3e9a5a72"]]);export{aa as default};
